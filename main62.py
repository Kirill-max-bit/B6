def найти_первое_большее(последовательность, n):
    """
    Находит порядковый номер первого числа в отсортированной последовательности,
    большего заданного значения n
    
    Args:
        последовательность: список целых чисел, упорядоченный по возрастанию и заканчивающийся на 10000
        n: число для сравнения
        
    Returns:
        tuple: (найдено, позиция)
               где найдено - True если число найдено, False если нет
                     позиция - индекс первого числа, большего чем n
                             или -1 если такого числа не найдено
    """
    # Проверяем, что последовательность заканчивается на 10000
    if последовательность[-1] != 10000:
        raise ValueError("Последовательность должна оканчиваться на 10000")
        
    # Используем бинарный поиск для эффективного поиска
    левая = 0
    правая = len(последовательность) - 1
    
    while левая <= правая:
        середина = (левая + правая) // 2
        
        # Если нашли число большее n и оно первое такое
        if последовательность[середина] > n:
            # Проверяем, что это самое маленькое такое число
            if середина == 0 or последовательность[середина - 1] <= n:
                return (True, середина + 1)  # +1 для порядкового номера с 1
            правая = середина - 1
        else:
            левая = середина + 1
    
    return (False, -1)

# Примеры использования
примеры = [
    ([1, 2000, 4000, 6000, 8000, 10000], 1500),
    ([1, 2, 3, 4, 5, 10000], 10),
    ([5000, 6000, 7000, 8000, 9000, 10000], 8500)
]

for i, (последовательность, n) in enumerate(примеры):
    найдено, позиция = найти_первое_большее(последовательность, n)
    print(f"\nПоследовательность {i+1}: {последовательность}")
    print(f"Ищем числа больше {n}")
    if найдено:
        print(f"Найдено число на позиции {позиция}")
    else:
        print("Чисел больших чем заданное значение не найдено")
